
library Arrays {
  bytes data;
  static const bytes EMPTY = b'';
  constructor(bytes data) {
    this.data = Arrays.EMPTY;
  }
  function push(int x) : bool {
    this.data += num2bin(x, 1);
    return true;
  }
  function pop() : int {
    int result = -9999999999;
    int maxIndex = this.length() - 1;
    if(maxIndex > -1) {
        bytes valueRaw = this.data[maxIndex * 1 : (maxIndex + 1) * 1];
        result = unpack(valueRaw);
        this.data = this.data[0 : maxIndex];
      }
    return result;
  }
  function indexOf(int x) : int {
    int result = -1;
    bool done = false;
    int length = this.length();
    loop (9) : i {
        if(i < length) {
          if(!done) {
            bytes valueRaw = this.data[i * 1 : (i + 1) * 1];
            int value = unpack(valueRaw);
            if(value == x) {
              result = i;
              done = true;
            }
          }
        }
      }
    return result;
  }
  function at(int index) : int {
    int result = -9999999999;
    int length = this.length();
    if(index >= 0 && index < length) {
        bytes valueRaw = this.data[index * 1 : (index + 1) * 1];
        result = unpack(valueRaw);
      }
    return result;
  }
  function length() : int {
    return (len(this.data)) / 1;
  }
  function clear() : bool {
    bool done = false;
    int length = this.length();
    if(length > 0) {
        this.data = b'';
        done = true;
      }
    return done;
  }
}

contract ArraysTest {
  public function test(int x) {
    Arrays a = new Arrays(b'009876');
    a.push(33);
    a.push(99);
    a.push(88);
    a.push(-1);
    a.push(-9);
    int index = a.indexOf(2);
    require(index == -1);
    index = a.indexOf(99);
    require(index == 1);
    index = a.indexOf(-1);
    require(index == 3);
    index = a.indexOf(-9);
    require(index == 4);
    int value = a.at(0);
    require(value == 33);
    value = a.at(1);
    require(value == 99);
    value = a.at(2);
    require(value == 88);
    value = a.at(3);
    require(value == -1);
    value = a.at(4);
    require(value == -9);
    value = a.at(5);
    require(value == -9999999999);
    int top = a.pop();
    require(top == -9);
    top = a.pop();
    require(top == -1);
    top = a.pop();
    require(top == 88);
    top = a.pop();
    require(top == 99);
    top = a.pop();
    require(top == 33);
    top = a.pop();
    require(top == -9999999999);
    a.push(-9);
    a.clear();
    require(a.length() == 0);
  }
}